name: ML Pipeline CI/CD
on: [push]

jobs:
  prepare-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Prepare data
        run: python scripts/prepare_data.py

  train-model:
    runs-on: ubuntu-latest
    needs: prepare-data  # Attend que la préparation des données soit terminée
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Train model
        run: python model_ml_pipeline.py

  test:
    runs-on: ubuntu-latest
    needs: train-model  # Attend que l'entraînement soit terminé
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: pip install -r requirements.txt && pip install pytest

      - name: Run unit tests
        run: pytest tests/test_model_pipeline.py

  notify:
    runs-on: ubuntu-latest
    needs: test  # Attend que les tests soient terminés
    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "ML Pipeline terminé avec succès !"
